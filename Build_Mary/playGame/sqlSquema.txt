CREATE TABLE `utilizador` (
  `idutilizador` int(11) NOT NULL AUTO_INCREMENT,
  `nome` varchar(50) NOT NULL,
  `grupo` varchar(50) NOT NULL,
  `telemovel` varchar(12) NOT NULL,
  `tipo` varchar(10) NOT NULL,
  `email` varchar(100) NOT NULL,
  `role` enum('admin','jogador') NOT NULL DEFAULT 'jogador',
  PRIMARY KEY (`idutilizador`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE `jogo` (
  `idjogo` int(11) NOT NULL AUTO_INCREMENT,
  `idutilizador` int(11) NOT NULL,
  `descricao` text NOT NULL,
  `inicio` timestamp NULL DEFAULT NULL,
  `fim` timestamp NULL DEFAULT NULL,
  `estado` varchar(20) NOT NULL CHECK (`estado` in ('por_iniciar','ativo','terminado')),
  PRIMARY KEY (`idjogo`),
  KEY `idutilizador` (`idutilizador`),
  CONSTRAINT `jogo_ibfk_1` FOREIGN KEY (`idutilizador`) REFERENCES `utilizador` (`idutilizador`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE `setupmaze` (
  `id_setup` int(11) NOT NULL AUTO_INCREMENT,
  `idjogo` int(11) NOT NULL,
  `normalnoise` DECIMAL(10,2) DEFAULT 19.2,
  `frozentime` int(11) NOT NULL,
  `noisevartoleration` DECIMAL(10,2) DEFAULT 2,	
  PRIMARY KEY (`id_setup`),
  KEY `idjogo` (`idjogo`),
  CONSTRAINT `setupmaze_ibfk_1` FOREIGN KEY (`idjogo`) REFERENCES `jogo` (`idjogo`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE `corridor` (
  `id_corredor` int(11) NOT NULL AUTO_INCREMENT,
  `salaa` int(11) NOT NULL,
  `salab` int(11) NOT NULL,
  `status` enum('open','closed') DEFAULT 'open',
  `idjogo` int(11) NOT NULL,
  PRIMARY KEY (`id_corredor`),
  UNIQUE KEY `unique_corridor` (`salaa`,`salab`,`idjogo`),
  KEY `idjogo` (`idjogo`),
  CONSTRAINT `corridor_ibfk_1` FOREIGN KEY (`idjogo`) REFERENCES `jogo` (`idjogo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE `sound` (
  `id_sound` varchar(255) NOT NULL,
  `player` int(11) NOT NULL,
  `hour` datetime NOT NULL,
  `soundlevel` float NOT NULL,
  `idjogo` int(11) NOT NULL,
  PRIMARY KEY (`id_sound`),
  UNIQUE KEY `idx_unique_sound` (`player`,`hour`),
  KEY `idjogo` (`idjogo`),
  CONSTRAINT `sound_ibfk_1` FOREIGN KEY (`idjogo`) REFERENCES `jogo` (`idjogo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE `medicoespassagens` (
  `id_medicao` varchar(255) NOT NULL,
  `player` int(11) NOT NULL,
  `marsami` int(11) NOT NULL,
  `roomorigin` int(11) NOT NULL,
  `roomdestiny` int(11) NOT NULL,
  `status` int(11) NOT NULL CHECK (`status` in (0,1,2)),
  `idjogo` int(11) NOT NULL,
  PRIMARY KEY (`id_medicao`),
  UNIQUE KEY `idx_unique_movement` (`player`,`marsami`,`roomorigin`,`roomdestiny`,`status`),
  KEY `idjogo` (`idjogo`),
  CONSTRAINT `medicoespassagens_ibfk_1` FOREIGN KEY (`idjogo`) REFERENCES `jogo` (`idjogo`),
  CONSTRAINT `medicoespassagens_ibfk_2` FOREIGN KEY (`roomorigin`,`roomdestiny`,`idjogo`) REFERENCES `corridor` (`salaa`,`salab`,`idjogo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE `ocupacaolabirinto` (
  `sala` int(11) NOT NULL,
  `odd` int(11) DEFAULT 0,
  `even` int(11) DEFAULT 0,
  `triggersused` int(11) DEFAULT 0,
  `idjogo` int(11) NOT NULL,
  PRIMARY KEY (`sala`,`idjogo`),
  KEY `idjogo` (`idjogo`),
  CONSTRAINT `ocupacaolabirinto_ibfk_1` FOREIGN KEY (`idjogo`) REFERENCES `jogo` (`idjogo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE `advanced_outliers_sound` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `player_id` int(11) DEFAULT NULL,
  `soundlevel` float DEFAULT NULL,
  `hour` datetime DEFAULT NULL,
  `errorreason` varchar(255) DEFAULT NULL,
  `timestamp` datetime DEFAULT current_timestamp(),
  `idjogo` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idjogo` (`idjogo`),
  CONSTRAINT `advanced_outliers_sound_ibfk_1` FOREIGN KEY (`idjogo`) REFERENCES `jogo` (`idjogo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE `advanced_outliers_movements` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `marsami_id` int(11) DEFAULT NULL,
  `roomorigin` int(11) DEFAULT NULL,
  `roomdestiny` int(11) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  `errorreason` varchar(255) DEFAULT NULL,
  `timestamp` datetime DEFAULT current_timestamp(),
  `idjogo` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `idjogo` (`idjogo`),
  CONSTRAINT `advanced_outliers_movements_ibfk_1` FOREIGN KEY (`idjogo`) REFERENCES `jogo` (`idjogo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

CREATE TABLE `mensagens` (
  `id_mensagem` int(11) NOT NULL AUTO_INCREMENT,
  `idjogo` int(11) NOT NULL,
  `leitura` DECIMAL(10,2) NOT NULL,
  `sala` int(11) NOT NULL DEFAULT 0,
  `sensor` int(11) NOT NULL DEFAULT 0,
  `tipo` enum('alerta_ruido','gatilho','erro') NOT NULL,
  `mensagem` text,
  `hora` timestamp DEFAULT CURRENT_TIMESTAMP,
  `hora_escrita` timestamp DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id_mensagem`),
  KEY `idjogo` (`idjogo`),
  CONSTRAINT `mensagens_ibfk_1` FOREIGN KEY (`idjogo`) REFERENCES `jogo` (`idjogo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

DELIMITER $$
CREATE TRIGGER `tr_alerta_ruido`
AFTER INSERT ON `sound`
FOR EACH ROW
BEGIN
    DECLARE last_alert_time TIMESTAMP;
    DECLARE last_alert_type VARCHAR(20);
    DECLARE current_alert_type VARCHAR(20);

    IF NEW.soundlevel > 21 THEN
        SET current_alert_type = 'muito elevado';
    ELSEIF NEW.soundlevel > 20 THEN
        SET current_alert_type = 'elevado';
    ELSE
        SET current_alert_type = NULL;
    END IF;

    IF current_alert_type IS NOT NULL THEN

        SELECT tipo, hora INTO last_alert_type, last_alert_time
        FROM mensagens
        WHERE idjogo = NEW.idjogo AND tipo = 'alerta_ruido'
        ORDER BY hora DESC
        LIMIT 1;

        IF (last_alert_time IS NULL) 
            OR (current_alert_type = 'muito elevado' AND last_alert_type = 'elevado')
            OR (TIMESTAMPDIFF(SECOND, last_alert_time, NOW()) >= 1) THEN
            
            INSERT INTO mensagens (idjogo, tipo, mensagem, hora)
            VALUES (
                NEW.idjogo,
                'alerta_ruido',
                CONCAT('Nível de ruído ', current_alert_type),
                NOW()
            );
        END IF;
    END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER `tr_fecharportas_seruidoexceder`
AFTER INSERT ON `sound`
FOR EACH ROW
BEGIN
  DECLARE limite FLOAT;
  SELECT `limiteruido` INTO limite FROM `setupmaze` WHERE `idjogo` = NEW.`idjogo`;
  IF NEW.`soundlevel` > limite THEN
    UPDATE `corridor` SET `status` = 'closed' WHERE `idjogo` = NEW.`idjogo`;
    UPDATE `jogo` SET `estado` = 'terminado' WHERE `idjogo` = NEW.`idjogo`;
    INSERT INTO `mensagens` (`idjogo`, `tipo`, `mensagem`)
    VALUES (NEW.`idjogo`, 'alerta_ruido', 'Portas fechadas devido a ruído excessivo.');
  END IF;
END$$
DELIMITER ;

DELIMITER $$    
CREATE PROCEDURE `Criar_utilizador`(  
    IN p_idutilizador INT,  
    IN p_nome VARCHAR(50),  
    IN p_grupo VARCHAR(50),  
    IN p_telemovel VARCHAR(12),  
    IN p_tipo VARCHAR(10),  
    IN p_email VARCHAR(100)  
)  
BEGIN  
    INSERT INTO utilizador (idutilizador, nome, grupo, telemovel, tipo, email)  
    VALUES (p_idutilizador, p_nome, p_grupo, p_telemovel, p_tipo, p_email);  
END$$  

CREATE PROCEDURE `Criar_jogo`(  
    IN p_idutilizador INT,  
    IN p_descricao TEXT  
)  
BEGIN  
    INSERT INTO jogo (idutilizador, descricao, estado)  
    VALUES (p_idutilizador, p_descricao, 'por_iniciar');  
END$$  

CREATE PROCEDURE `Alterar_jogo`(  
    IN p_idjogo INT,  
    IN p_descricao TEXT  
)  
BEGIN  
    UPDATE jogo SET descricao = p_descricao WHERE idjogo = p_idjogo;  
END$$  
 
CREATE PROCEDURE `AbrirFechar_Porta`(  
    IN p_idjogo INT,  
    IN p_salaA INT,  
    IN p_salaB INT,  
    IN p_status ENUM('open','closed')  
)  
BEGIN  
    UPDATE corridor SET status = p_status  
    WHERE idjogo = p_idjogo AND salaa = p_salaA AND salab = p_salaB;  
END$$  
DELIMITER ;  